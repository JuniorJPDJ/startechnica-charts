apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ printf "%s" (include "common.names.fullname" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    openebs.io/engine: io-engine
    app.kubernetes.io/component: mayastor
    {{- if .Values.commonLabels }}
      {{- include "common.tplvalues.render" (dict "value" .Values.commonLabels "context" $) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" (dict "value" .Values.commonAnnotations "context" $) | nindent 4 }}
  {{- end }}
spec:
  revisionHistoryLimit: 2
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: mayastor
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  minReadySeconds: 10
  template:
    metadata:
      {{- if .Values.podAnnotations }}
      annotations:
        {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: mayastor
        {{- if .Values.podLabels }}
          {{- include "common.tplvalues.render" (dict "value" .Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      # To resolve services from mayastor's namespace
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      {{- include "mayastor.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mayastor.serviceAccountName" . }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      initContainers:
        - name: message-bus-probe
          image: busybox:latest
          command: ['sh', '-c', 'until nc -vz mayastor-nats 4222; do echo "Waiting for message bus..."; sleep 1; done;']
      containers:
      - name: mayastor
        image: {{ include "mayastor.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
          - name: NVMF_TCP_MAX_QUEUE_DEPTH
            value: "32"
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: RUST_LOG
            value: info,mayastor={{ .Values.mayastorLogLevel }}
          - name: RUST_BACKTRACE
            value: full
        {{- if .Values.diagnosticMode.enabled }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
        {{- else if .Values.command }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
        {{- else }}
        command:
          - mayastor
        {{- end }}
        {{- if .Values.diagnosticMode.enabled }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
        {{- else if .Values.args }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
        {{- else }}
        args:
          # The -l argument accepts cpu-list. Indexing starts at zero.
          # For example -l 1,2,10-20 means use core 1, 2, 10 to 20.
          # Note: Ensure that the CPU resources are updated accordingly.
          #       If you use 2 CPUs, the CPU: field should also read 2.
          - "-N$(MY_NODE_NAME)"
          - "-g$(MY_POD_IP)"
          - "-nmayastor-nats"
          - "-y/var/local/mayastor/config.yaml"
          - "-l{{ include "mayastorCpuSpec" . }}"
          - "-pmayastor-etcd"
        {{- end }}
        securityContext:
          privileged: true
        resources:
          # NOTE: Each container must have mem/cpu limits defined in order to
          # belong to Guaranteed QoS class, hence can never get evicted in case of
          # pressure unless they exceed those limits. limits and requests must be the same.
          limits:
            cpu: "{{ .Values.mayastorCpuCount }}"
            memory: "1Gi"
            hugepages-2Mi: "{{ max .Values.mayastorHugePagesGiB 2 }}Gi"
          requests:
            cpu: "{{ .Values.mayastorCpuCount }}"
            memory: "1Gi"
            hugepages-2Mi: "{{ max .Values.mayastorHugePagesGiB 2 }}Gi"
        ports:
          - containerPort: 10124
            name: mayastor
            protocol: TCP
        volumeMounts:
          - name: device
            mountPath: /dev
          - name: run-udev
            mountPath: /run/udev
          - name: dshm
            mountPath: /dev/shm
          - name: configlocation
            mountPath: /var/local/mayastor/
      volumes:
        - name: device
          hostPath:
            path: /dev
            type: Directory
        - name: run-udev
          hostPath:
            path: /run/udev
            type: Directory
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: "1Gi"
        - name: hugepage
          emptyDir:
            medium: HugePages
        - name: configlocation
          hostPath:
            path: /var/local/mayastor/
            type: DirectoryOrCreate