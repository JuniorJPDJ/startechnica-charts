apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "netbox.fullname" . }}
  {{- $versionLabel := dict "app.kubernetes.io/version" ( include "common.images.version" ( dict "imageRoot" .Values.image "chart" .Chart ) ) }}  
  {{- $labels := include "common.tplvalues.merge" ( dict "values" ( list .Values.commonLabels $versionLabel ) "context" . ) }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" $labels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: netbox
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ default 1 .Values.replicaCount }}
  {{- end }}
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels $versionLabel ) "context" . ) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
      app.kubernetes.io/component: server
      app.kubernetes.io/part-of: netbox
  {{ if .Values.updateStrategy -}}
  strategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{ end -}}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/ConfigMap/netbox.yaml") . | sha256sum }}
        {{- if (not .Values.existingSecret) }}
        checksum/secret: {{ include (print $.Template.BasePath "/Secret/netbox.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.podAnnotations }}
          {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
        {{- if and .Values.metrics.enabled .Values.metrics.podAnnotations }}
          {{- include "common.tplvalues.render" ( dict "value" .Values.metrics.podAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: server
        app.kubernetes.io/part-of: netbox
        {{- if and .Values.metrics.enabled .Values.metrics.podLabels }}
          {{- include "common.tplvalues.render" ( dict "value" .Values.metrics.podLabels "context" $ ) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "netbox.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "netbox.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
        - name: netbox
          image: {{ template "netbox.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SUPERUSER_NAME
              value: {{ .Values.superuser.name | quote }}
            - name: SUPERUSER_EMAIL
              value: {{ .Values.superuser.email | quote }}
            - name: SKIP_STARTUP_SCRIPTS
              value: {{ .Values.skipStartupScripts | quote }}
            {{- if .Values.dbWaitDebug }}
            - name: DB_WAIT_DEBUG
              value: "1"
            {{- end }}
            {{- if .Values.overrideUnitConfig }}
            - name: UNIT_CONFIG
              value: /run/config/netbox/nginx-unit.json
            {{- end }}
            {{- if .Values.allowedHostsIncludesPodIp }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            {{- end }}
            {{- if .Values.extraEnvVars }}
              {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPorts.http }}
              protocol: TCP
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /{{ .Values.basePath }}login/
              port: http
              {{- if (not (eq (index .Values.allowedHosts 0) "*")) }}
              httpHeaders:
                - name: Host
                  value: {{ (index .Values.allowedHosts 0) | quote }}
              {{- end }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/netbox/config/configuration.py
              subPath: configuration.py
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: {{ include "netbox.fullname" . }}
        - name: secrets
          projected:
            sources:
              - secret:
                  name: {{ .Values.existingSecret | default (include "netbox.fullname" .) | quote }}
                  items:
                  # Used by netbox-docker entry scripts
                  - key: superuser_password
                    path: superuser_password
                  - key: superuser_api_token
                    path: superuser_api_token
                  # Used by our configuration
                  - key: email_password
                    path: email_password
                  - key: secret_key
                    path: secret_key
                  {{- if eq .Values.remoteAuth.backend "netbox.authentication.LDAPBackend" }}
                  - key: ldap_bind_password
                    path: ldap_bind_password
                  {{- end }}
              - secret:
                  name: {{ include "netbox.postgresql.secret" . | quote }}
                  items:
                  - key: {{ include "netbox.postgresql.secretKey" . | quote }}
                    path: db_password
              - secret:
                  name: {{ include "netbox.tasksRedis.secret" . | quote }}
                  items:
                  - key: {{ include "netbox.tasksRedis.secretKey" . | quote }}
                    path: redis_tasks_password
              - secret:
                  name: {{ include "netbox.cachingRedis.secret" . | quote }}
                  items:
                  - key: {{ include "netbox.cachingRedis.secretKey" . | quote }}
                    path: redis_cache_password
