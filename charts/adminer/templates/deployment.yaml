apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "adminer.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "adminer.name" . }}
    helm.sh/chart: {{ include "adminer.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- with .Values.labels }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "adminer.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "adminer.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
{{- with .Values.labels }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
        {{- end }}
      {{- end }}      
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.config.port }}
              protocol: TCP
          env:
{{- if .Values.config.plugins }}
            - name: ADMINER_PLUGINS
              value: {{ .Values.config.plugins }}
{{- end }}
{{- if .Values.config.design }}
            - name: ADMINER_DESIGN
              value: {{ .Values.config.design }}
{{- end }}
{{- if .Values.config.externalserver }}
            - name: ADMINER_DEFAULT_SERVER
              value: {{ .Values.config.externalserver }}
{{- end }}
          livenessProbe:
            httpGet:
              path: {{if .Values.config.base_url }}{{- with urlParse (tpl .Values.config.base_url .) }}{{ .path }}{{end}}{{end}}/health
              port: {{ .Values.config.port }}
{{- if .Values.config.base_url}}
              httpHeaders:
                - name: Host
                  value: {{ regexReplaceAll ":\\d+$" (urlParse (tpl .Values.config.base_url .)).host  "" }}
{{- end }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds | default 15 }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds | default 30 }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold | default 20 }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds | default 5 }}
          readinessProbe:
            httpGet:
              path: {{if .Values.config.base_url }}{{- with urlParse (tpl .Values.config.base_url .) }}{{ .path }}{{end}}{{end}}/health
              port: {{ .Values.config.port }}
{{- if .Values.config.base_url}}
              httpHeaders:
                - name: Host
                  value: {{ regexReplaceAll ":\\d+$" (urlParse (tpl .Values.config.base_url .)).host  "" }}
{{- end }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds | default 15 }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds | default 30 }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold | default 20 }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds | default 5 }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      serviceAccountName: {{ include "adminer.serviceAccountName" . }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
{{- if .Values.affinity }}
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---