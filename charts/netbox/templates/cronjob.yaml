{{- if .Values.housekeeping.enabled -}}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ template "netbox.housekeeping.fullname" . }}
  {{- $versionLabel := dict "app.kubernetes.io/version" ( include "common.images.version" ( dict "imageRoot" .Values.image "chart" .Chart ) ) }}  
  {{- $labels := include "common.tplvalues.merge" ( dict "values" ( list .Values.commonLabels $versionLabel ) "context" . ) }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" $labels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: housekeeping
    app.kubernetes.io/part-of: netbox
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  concurrencyPolicy: {{ .Values.housekeeping.concurrencyPolicy }}
  failedJobsHistoryLimit: {{ .Values.housekeeping.failedJobsHistoryLimit }}
  schedule: {{ .Values.housekeeping.schedule | quote }}
  successfulJobsHistoryLimit: {{ .Values.housekeeping.successfulJobsHistoryLimit }}
  suspend: {{ .Values.housekeeping.suspend }}
  jobTemplate:
    metadata:
      {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.housekeeping.podLabels .Values.commonLabels $versionLabel ) "context" . ) }}
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: housekeeping
        app.kubernetes.io/part-of: netbox
    spec:
      template:
        metadata:
          {{- if .Values.podAnnotations }}
          annotations:
            {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 12 }}
          {{- end }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 12 }}
            app.kubernetes.io/component: housekeeping
            app.kubernetes.io/part-of: netbox
        spec:
          {{- include "netbox.imagePullSecrets" . | nindent 10 }}
          serviceAccountName: {{ include "netbox.serviceAccountName" . }}
          automountServiceAccountToken: {{ .Values.housekeeping.automountServiceAccountToken }}
          securityContext:
            {{- toYaml .Values.housekeeping.podSecurityContext | nindent 12 }}
          {{- with .Values.housekeeping.extraInitContainers }}
          initContainers:
          {{- toYaml . | nindent 10 }}
          {{- end }}
          containers:
          - name: housekeeping
            {{- if .Values.containerSecurityContext.enabled }}
            securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 14 }}
            {{- end }}
            image: {{ template "netbox.housekeeping.image" . }}
            command:
              - /opt/netbox/venv/bin/python
              - /opt/netbox/netbox/manage.py
              - housekeeping
            {{- include "netbox.imagePullSecrets" . | nindent 12 }}
            {{- with .Values.housekeeping.extraEnvs }}
            env:
            {{- toYaml . | nindent 12 }}
            {{- end }}
            volumeMounts:
            - name: config
              mountPath: /etc/netbox/config/configuration.py
              subPath: configuration.py
              readOnly: true
            {{ if eq .Values.remoteAuth.backend "netbox.authentication.LDAPBackend" -}}
            - name: config
              mountPath: /etc/netbox/config/ldap/ldap_config.py
              subPath: ldap_config.py
              readOnly: true
            {{ end -}}
            - name: config
              mountPath: /run/config/netbox
              readOnly: true
            - name: secrets
              mountPath: /run/secrets/netbox
              readOnly: true
            {{- include "netbox.extraConfig.volumeMounts" . | nindent 12 -}}
            - name: netbox-tmp
              mountPath: /tmp
            - name: media
              mountPath: /opt/netbox/netbox/media
              subPath: {{ .Values.persistence.subPath | default "" | quote }}
            {{- if .Values.reportsPersistence.enabled }}
            - name: reports
              mountPath: /opt/netbox/netbox/reports
              subPath: {{ .Values.reportsPersistence.subPath | default "" | quote }}
            {{- end }}
            {{- if .Values.scriptsPersistence.enabled }}
            - name: scripts
              mountPath: /opt/netbox/netbox/scripts
              subPath: {{ .Values.scriptsPersistence.subPath | default "" | quote }}
            {{- end }}
            {{- with .Values.housekeeping.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if .Values.housekeeping.resources }}
            resources:
              {{- toYaml .Values.housekeeping.resources | nindent 14 }}
            {{- end }}
          {{- with .Values.housekeeping.extraContainers }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          volumes:
          - name: config
            configMap:
              name: {{ include "netbox.fullname" . }}
          - name: secrets
            projected:
              sources:
              - secret:
                  name: {{ .Values.existingSecretName | default (include "netbox.fullname" .) | quote }}
                  items:
                  # Used by our configuration
                  - key: {{ include "netbox.email.secretPasswordKey" . | quote }}
                    path: email_password
                  - key: secret_key
                    path: secret_key
              {{- if .Values.remoteAuth.enabled }}
              - secret:
                  name: {{ include "netbox.remoteAuth.secretName" . | quote }}
                  items:
                    {{- if and (eq .Values.remoteAuth.backend "netbox.authentication.LDAPBackend") .Values.remoteAuth.ldap.enabled }}
                    - key: ldap_bind_password
                      path: ldap_bind_password
                    {{- end }}
              {{- end }}
              - secret:
                  name: {{ include "netbox.databaseSecretName" . | quote }}
                  items:
                  - key: {{ include "netbox.databaseSecretPasswordKey" . | quote }}
                    path: db_password
              - secret:
                  name: {{ include "netbox.tasksRedis.secretName" . | quote }}
                  items:
                  - key: {{ include "netbox.tasksRedis.secretPasswordKey" . | quote }}
                    path: redis_tasks_password
              - secret:
                  name: {{ include "netbox.cachingRedis.secretName" . | quote }}
                  items:
                  - key: {{ include "netbox.cachingRedis.secretPasswordKey" . | quote }}
                    path: redis_cache_password
          {{- include "netbox.extraConfig.volumes" . | nindent 10 -}}
          - name: netbox-tmp
            emptyDir:
              medium: Memory
          - name: media
            {{- if .Values.persistence.enabled }}
            persistentVolumeClaim:
              claimName: {{ .Values.persistence.existingClaim | default (printf "%s-media" (include "netbox.fullname" .)) }}
            {{- else }}
            emptyDir: {}
            {{- end }}
          {{- if .Values.reportsPersistence.enabled }}
          - name: reports
            persistentVolumeClaim:
              claimName: {{ .Values.reportsPersistence.existingClaim | default (printf "%s-reports" (include "netbox.fullname" .)) }}
          {{- end }}
          {{- if .Values.scriptsPersistence.enabled }}
          - name: scripts
            persistentVolumeClaim:
              claimName: {{ .Values.scriptsPersistence.existingClaim | default (printf "%s-scripts" (include "netbox.fullname" .)) }}
          {{- end }}
          {{- with .Values.housekeeping.extraVolumes }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.housekeeping.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.housekeeping.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.housekeeping.tolerations }}
          tolerations:
          {{- toYaml . | nindent 10 }}
          {{- end }}
          restartPolicy: {{ .Values.housekeeping.restartPolicy }}
{{- end -}}
