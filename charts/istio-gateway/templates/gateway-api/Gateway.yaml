{{- if not (eq (include "common.capabilities.networkingGatewayGateway.apiVersion" .) "false") }}
{{- range $gateway := .Values.gateways }}
{{- if and .enabled (and .gatewayApi .gatewayApi.create) -}}
apiVersion: {{ include "common.capabilities.networkingGatewayGateway.apiVersion" $ }}
kind: Gateway
metadata:
  name: {{ .name }}
  namespace: {{ include "gateways.names.namespace" $ | quote }}
  {{- $versionLabel := dict "app.kubernetes.io/version" (include "gateways.images.version" (dict "imageRoot" .image "chart" $.Chart) ) }}  
  {{- $labels := include "gateways.tplvalues.merge" (dict "values" (list $.Values.commonLabels $versionLabel) "context" $) }}
  labels: {{ include "gateways.labels.standard" (dict "gatewayValues" $gateway "customLabels" $labels "context" $) | nindent 4 }}
  {{- if $.Values.commonAnnotations }}
  annotations: {{- include "gateways.tplvalues.render" (dict "value" $.Values.commonAnnotations "context" $) | nindent 4 }}
  {{- end }}
spec:
  gatewayClassName: {{ $.Values.gatewayClassName }}
  addresses:
    - value: {{ printf "%s.%s.svc.%s" .name (include "gateways.names.namespace" $) $.Values.clusterDomain }}
      type: Hostname
  listeners:
    {{- if and .service .service.ports }}
    - name: http2
      port: {{ default 80 .service.ports.http2 | int }}
      protocol: HTTP
      allowedRoutes:
        namespaces:
          from: All
    {{- else }}
    - name: http2
      port: 80
      protocol: HTTP
      allowedRoutes:
        namespaces:
          from: All
    {{- end }}
    {{- if and .gatewayApi .gatewayApi.listeners }}
      {{- include "gateways.tplvalues.render" (dict "value" .gatewayApi.listeners "context" $) | nindent 4 }}
    {{- end }}
---
{{- end }}
{{- end }}
{{- end }}